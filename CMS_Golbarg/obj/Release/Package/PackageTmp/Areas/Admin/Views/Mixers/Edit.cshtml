@model CMS_Golbarg.ViewModel.CreateMixerViewModel

@{
    ViewBag.Title = "ویرایش فرمول رنگ مو";
}

@using (Html.BeginForm("Edit", "Mixers", FormMethod.Post, new { CreateMixerViewModel = Model }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Mixer.Id)
    <div class="col-md-6 col-lg-offset-6 centering">
        <div class="box box-primary">
            <div class="box-header with-border">
                <b> @ViewBag.Title </b>
            </div>
            <div class="box-body">
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    @Html.LabelFor(model => model.Mixer.Mix, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.Mixer.Mix, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Mixer.Mix, "", new { @class = "text-danger" })



                    <div class="form-group">
                        @Html.LabelFor(model => model.Mixer.DeColor, htmlAttributes: new { @class = "control-label col-md-2" })

                        @Html.EditorFor(model => model.Mixer.DeColor, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Mixer.DeColor, "", new { @class = "text-danger" })

                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Mixer.Oxidan, htmlAttributes: new { @class = "control-label" })

                        @Html.EditorFor(model => model.Mixer.Oxidan, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Mixer.Oxidan, "", new { @class = "text-danger" })

                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.PaintingWays, htmlAttributes: new { @class = "control-label" })
                        @if (!(ViewBag.msg == "" || ViewBag.msg == null))
                        {
                            @Html.DropDownListFor(model => model.Mixer.PaintingWayId, new SelectList(Model.PaintingWays, "Id", "name", Model.Mixer.PaintingWayId), htmlAttributes: new { @class = "form-control" })
                        }
                        else
                        {
                            @Html.DropDownListFor(model => model.Mixer.PaintingWayId, new SelectList(Model.PaintingWays, "Id", "name", Model.Mixer.PaintingWayId), htmlAttributes: new { @class = "form-control" })
                        }
                        @Html.ValidationMessageFor(model => model.Mixer.PaintingWayId, "", new { @class = "text-danger" })

                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.Mixer.ActualHairColorID, htmlAttributes: new { @class = "control-label" })
                        @if (!(ViewBag.msg == "" || ViewBag.msg == null))
                        {
                            @Html.DropDownListFor(model => model.Mixer.ActualHairColorID, new SelectList(Model.ActualHairColors, "Id", "FullInfo", Model.Mixer.ActualHairColorID), htmlAttributes: new { @class = "form-control" })
                        }
                        else
                        {
                            @Html.DropDownListFor(model => model.Mixer.ActualHairColorID, new SelectList(Model.ActualHairColors, "Id", "FullInfo"), htmlAttributes: new { @class = "form-control" })
                        }
                        @Html.ValidationMessageFor(model => model.Mixer.ActualHairColorID, "", new { @class = "text-danger" })

                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Mixer.DestinationHairColorID, htmlAttributes: new { @class = "control-label" })
                        @if (!(ViewBag.msg == "" || ViewBag.msg == null))
                        {
                            @Html.DropDownListFor(model => model.Mixer.DestinationHairColorID, new SelectList(Model.DestinationHairColors, "Id", "FullInfo", Model.Mixer.DestinationHairColorID), htmlAttributes: new { @class = "form-control" })
                        }
                        else
                        {
                            @Html.DropDownListFor(model => model.Mixer.DestinationHairColorID, new SelectList(Model.DestinationHairColors, "Id", "FullInfo"), htmlAttributes: new { @class = "form-control" })
                        }
                        @Html.ValidationMessageFor(model => model.Mixer.DestinationHairColorID, "", new { @class = "text-danger" })

                    </div>
                </div>

                <div class="box-footer">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <button type="submit" class="btn btn-default fa fa-save pull-right" title="ذخیره"></button>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <a href="@Url.Action("index")" class="btn btn-default fa fa-backward pull-left" title="بازگشت به لیست"></a>
                            </div>
                        </div>
                    </div>

                </div>

            </div>

        </div>
    </div>
}




